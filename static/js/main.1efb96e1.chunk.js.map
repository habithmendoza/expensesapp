{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/List/List.js","components/ControlBudget/ControlBudget.js","components/InitialModal/InitialModal.js","components/PopUp/PopUp.js","components/App.jsx","index.js"],"names":["Header","props","className","title","Form","nameExpenseRef","React","createRef","valueExpenseRef","onSubmit","e","preventDefault","expenses","current","value","saveExpense","currentTarget","reset","ref","type","placeholder","List","expense","transitions","useTransition","id","from","opacity","enter","map","key","div","style","item","name","ControlBudget","balance","budget","totalExpense","checkBalance","InitialModal","budgetRef","isABudget","PopUp","info","infoPopUp","App","useState","showModal","setShowModal","state","popUp","setPopUp","setBudget","setBalance","setExpense","setTotalExpense","finalBudget","exp","Number","sumExpenses","validatePopUp","bget","nameExp","valueExp","newExpense","Date","now","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1efb96e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{props.title}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../Form/Form.css';\r\n\r\nconst Form = (props) => {\r\n\r\n    let nameExpenseRef = React.createRef();\r\n    let valueExpenseRef = React.createRef();\r\n\r\n    const createExpense = e => {\r\n        e.preventDefault();\r\n        const expenses = {\r\n            nameExpenseRef: nameExpenseRef.current.value,\r\n            valueExpenseRef: valueExpenseRef.current.value\r\n        }\r\n        props.saveExpense(expenses);\r\n        return e.currentTarget.reset();\r\n    }\r\n\r\n    return (\r\n        <form className='form' onSubmit={createExpense}>\r\n            <h2>Ingresa tus gastos</h2>\r\n            <label>Nombre gasto</label>\r\n            <input ref={nameExpenseRef} type=\"text\" placeholder='Ej: Transporte' />\r\n            <label>Valor</label>\r\n            <input ref={valueExpenseRef} type=\"text\" placeholder='Ej: 50.000' />\r\n            <button className='button-form' type=\"submit\">AGREGAR</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport { useTransition, animated } from 'react-spring';\r\nimport './List.css';\r\n\r\nconst List = ({ expense }) => {\r\n\r\n    const transitions = useTransition(expense, expense => expense.id, {\r\n        from: { opacity: 0, },\r\n        enter: { opacity: 1, },\r\n    })\r\n\r\n    return (\r\n        <div className='list'>\r\n            <h2>Listado Gastos</h2>\r\n            <div className='list-expenses'>\r\n                {transitions.map(({ props, key }) => (\r\n                    <animated.div className='card' key={key} style={props}>\r\n                        <div className='card-name'>{transitions[key].item.name}</div>\r\n                        <div className='card-value'>{transitions[key].item.value}</div>\r\n                    </animated.div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default List;\r\n\r\n\r\n/*\r\nconst [items, set] = useState([...])\r\nconst transitions = useTransition(items, item => item.key, {\r\nfrom: { transform: 'translate3d(0,-40px,0)' },\r\nenter: { transform: 'translate3d(0,0px,0)' },\r\nleave: { transform: 'translate3d(0,-40px,0)' },\r\n})\r\nreturn transitions.map(({ item, props, key }) =>\r\n<animated.div key={key} style={props}>{item.text}</animated.div>\r\n)\r\n*/\r\n\r\n\r\n/*\r\n{expenses.map(e => {\r\n                    return (\r\n                        <animated.div key={e.id} className='card' style={fade} >\r\n                            <div className='card-name'>{e.name}</div>\r\n                            <div className='card-value'>{e.value}</div>\r\n                        </animated.div>\r\n                    )\r\n                })}\r\n                */","import React from 'react';\r\nimport '../ControlBudget/ControlBudget.css';\r\n\r\nconst ControlBudget = (props) => {\r\n    const balance = props.balance;\r\n    const budget = props.budget;\r\n    const totalExpense = props.totalExpense;\r\n\r\n    const checkBalance = (budget, balance) => {\r\n        let className;\r\n        if ((budget / 4) > balance) {\r\n            className = 'cardR balance danger'\r\n        } else if ((budget / 2) > balance) {\r\n            className = 'cardR balance alert'\r\n        } else {\r\n            className = 'cardR balance'\r\n        }\r\n        return className;\r\n    }\r\n\r\n    return (\r\n        <div className='container-cb'>\r\n            <div className='cardR budget'>\r\n                <h3>Presupuesto:</h3>\r\n                <h3>${budget}</h3>\r\n            </div>\r\n            <div className={checkBalance(budget, balance)}>\r\n                <h3>Saldo:</h3>\r\n                <h3>${balance}</h3>\r\n            </div>\r\n            <div className='cardR totalExp'>\r\n                <h3>Total gastos:</h3>\r\n                <h3>${totalExpense}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ControlBudget;","import React from 'react'\r\nimport '../InitialModal/InitialModal.css';\r\n\r\nconst InitialModal = (props) => {\r\n    const budgetRef = React.createRef();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const budget = budgetRef.current.value;\r\n        if (budget > 0) {\r\n            props.isABudget(budget);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='overlay'>\r\n            <div className='modal'>\r\n                <div className='modal-header'>\r\n                    <h2>Ingresa tu presupuesto</h2>\r\n                </div>\r\n                <div className='modal-body'>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input ref={budgetRef} type=\"text\"></input>\r\n                        <button className='btn-submit' type=\"submit\">CONTINUAR</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InitialModal;","import React from 'react';\r\nimport '../PopUp/PopUp.css';\r\n\r\nconst PopUp = (props) => {\r\n    const info = props.infoPopUp.info;\r\n\r\n    return (\r\n        <div className='popUp'>\r\n            <h4>{info}</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default PopUp;","import React, { useState } from 'react';\nimport './App.css';\nimport Header from '../components/Header/Header.js';\nimport Form from '../components/Form/Form';\nimport List from '../components//List/List';\nimport ControlBudget from '../components/ControlBudget/ControlBudget';\nimport InitialModal from '../components/InitialModal/InitialModal';\nimport PopUp from '../components/PopUp/PopUp';\n\nconst App = () => {\n  const [showModal, setShowModal] = useState(true);\n  const [popUp, setPopUp] = useState({\n    state: false,\n    info: ''\n  });\n  const [budget, setBudget] = useState(0);\n  const [balance, setBalance] = useState(0);\n  const [expense, setExpense] = useState([]);\n  const [totalExpense, setTotalExpense] = useState(0);\n\n  const isABudget = (bget) => {\n    setBudget(bget);\n    setBalance(bget);\n    setShowModal(false);\n\n  }\n\n  const saveExpense = (exp) => {\n    const nameExp = exp.nameExpenseRef;\n    const valueExp = exp.valueExpenseRef;\n    if (nameExp) {\n      if (valueExp > 0) {\n        const newExpense = {\n          id: Date.now(),\n          name: nameExp,\n          value: valueExp\n        };\n        setExpense([...expense, newExpense]);\n        sumExpenses(newExpense.value);\n        finalBudget(newExpense.value);\n        setPopUp({ state: false });\n      } else {\n        validatePopUp('Ingresa un valor válido')\n      }\n    } else {\n      validatePopUp('Ingresa un nombre válido')\n    }\n  }\n\n  const finalBudget = (exp) => {\n    const expense = Number(exp);\n    setBalance(balance - expense);\n  }\n\n  const sumExpenses = (exp) => {\n    const expense = Number(exp);\n    setTotalExpense(totalExpense + expense)\n  }\n\n  const validatePopUp = (info) => {\n    setPopUp({\n      state: true,\n      info: { info }\n    });\n  }\n\n  return (\n    <div className='container'>\n      {showModal ? <InitialModal isABudget={isABudget} /> : false}\n      <Header title='Gastos' />\n      <div className='main'>\n        <div className='main-container'>\n          <div className='form-container'>\n            <Form saveExpense={saveExpense} />\n            {popUp.state ? <PopUp infoPopUp={popUp.info} /> : false}\n          </div>\n          <div className='list-container'>\n            <List expense={expense} />\n            <ControlBudget budget={budget} balance={balance} totalExpense={totalExpense} />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}